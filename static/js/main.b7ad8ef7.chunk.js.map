{"version":3,"sources":["components/controls/Button.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/useForm.js","pages/SignUp.js","shopComponents/Card.js","shopComponents/main.js","shopComponents/Cart-Items.js","shopComponents/Header.js","shopComponents/Shop.js","pages/SignIn.js","pages/Instructions.js","App/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","label","textTransform","Controls","Input","props","name","value","error","onChange","type","TextField","variant","helperText","RadioGroup","items","FormControl","FormLabel","align","row","map","item","FormControlLabel","id","control","Radio","title","Select","options","InputLabel","MenuItem","FormHelperText","Checkbox","color","checked","e","target","convertToDefEventPara","Button","text","size","onClick","other","classes","useForm","initialFValues","validateOnChange","validate","useState","values","setValues","errors","setErrors","handleInputChange","event","resetForm","width","Form","children","className","autoComplete","genderItems","fullName","email","mobile","gender","who","terms","password","confPass","SignUpForm","setUser","history","useHistory","fieldValues","temp","test","length","Object","every","message","onSubmit","preventDefault","push","Grid","Paper","style","padding","Avatar","backgroundColor","Typography","MyCard","img","cart","setCart","wish","setWish","Card","md","CardActionArea","CardMedia","component","alt","height","image","CardContent","CardActions","IconButton","console","log","Main","setError","isLoaded","setIsLoaded","setItems","random","Math","floor","useEffect","fetch","then","res","json","result","slice","container","thumbnailUrl","charAt","toUpperCase","search","list","fullList","searchInput","opacity","fontSize","marginRight","Header","anchor","React","right","state","setState","toggleDrawer","open","key","alignItems","InputBase","placeholder","startAdornment","sm","Tooltip","Badge","badgeContent","Drawer","onClose","clsx","role","onKeyDown","List","display","justifyContent","Divider","ListItem","button","ListItemText","primary","ListItemIcon","filter","drawerWidth","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","content","flexGrow","SideDrawer","useTheme","setOpen","CssBaseline","AppBar","position","Toolbar","edge","paper","direction","index","remember","SignInForm","users","useSelector","store","x","marginTop","linkStylle","textDecoration","listItems","to","paperStyle","Instructions","App","dispatch","useDispatch","user","payload","addUser","exact","path","render","SignUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","concat","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b7ad8ef7.chunk.js","sourcesContent":["import React from 'react'\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(0.5)\n    },\n    label: {\n        textTransform: 'none'\n    }\n}))\n\nexport default function Button(props) {\n\n    const { text, size, color, variant, onClick, ...other } = props\n    const classes = useStyles();\n\n    return (\n        <MuiButton\n            variant={variant || \"contained\"}\n            size={size || \"large\"}\n            color={color || \"primary\"}\n            onClick={onClick}\n            {...other}\n            classes={{ root: classes.root, label: classes.label }}>\n            {text}\n        </MuiButton>\n    )\n}\n","import Input from \"./Input\";\nimport RadioGroup from \"./RadioGroup\";\nimport Select from \"./Select\";\nimport Checkbox from \"./Checkbox\";\n// import DatePicker from \"./DatePicker\";\nimport Button from \"./Button\";\n\nconst Controls = {\n    Input,\n    RadioGroup,\n    Select,\n    Checkbox,\n    // DatePicker,\n    Button\n\n}\n\nexport default Controls;","import React from 'react'\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n\n    const { name, label, value,error=null, onChange, type } = props;\n    return (\n        <TextField\n            variant=\"outlined\"\n            label={label}\n            name={name}\n            value={value}\n            onChange={onChange}\n            type={type}\n            {...(error && {error:true,helperText:error})}\n        />\n    )\n}\n","import React from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  RadioGroup as MuiRadioGroup,\n  FormControlLabel,\n  Radio,\n} from \"@material-ui/core\";\n\nexport default function RadioGroup(props) {\n  const { name, label, value, onChange, items } = props;\n\n  return (\n    <FormControl>\n      <FormLabel align=\"left\">{label}</FormLabel>\n      <MuiRadioGroup row name={name} value={value} onChange={onChange}>\n        {items.map((item) => (\n          <FormControlLabel\n            key={item.id}\n            value={item.id}\n            control={<Radio />}\n            label={item.title}\n          />\n        ))}\n      </MuiRadioGroup>\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Select as MuiSelect,\n  MenuItem,\n  FormHelperText,\n} from \"@material-ui/core\";\n\nexport default function Select(props) {\n  const { name, label, value, error = null, onChange, options } = props;\n\n  return (\n    <FormControl variant=\"outlined\" {...(error && { error: true })}>\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect label={label} name={name} value={value} onChange={onChange}>\n        {options.map((item) => (\n          <MenuItem key={item.id} value={item.id}>\n            {item.title}\n          </MenuItem>\n        ))}\n      </MuiSelect>\n      {error && <FormHelperText>{error}</FormHelperText>}\n    </FormControl>\n  );\n}\n","import React from 'react'\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\n\nexport default function Checkbox(props) {\n\n    const { name, label, value, onChange } = props;\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <FormControl>\n            <FormControlLabel\n                control={<MuiCheckbox\n                    name={name}\n                    color=\"primary\"\n                    checked={value}\n                    onChange={e => onChange(convertToDefEventPara(name, e.target.checked))}\n                />}\n                label={label}\n            />\n        </FormControl>\n    )\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n  const [values, setValues] = useState(initialFValues);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n    if (validateOnChange) validate({ [name]: value });\n    \n    // console.log(event.target.name, event.target.value);\n  };\n\n  const resetForm = () => {\n    setValues(initialFValues);\n    setErrors({});\n  };\n\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiFormControl-root\": {\n      width: \"90%\",\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport function Form(props) {\n  const classes = useStyles();\n  const { children, ...other } = props;\n  return (\n    <form \n    className={classes.root} autoComplete=\"off\" {...other}\n    >\n      {props.children}\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport Controls from \"../components/controls/Controls\";\nimport { useForm, Form } from \"../components/useForm\";\nimport { Grid, Paper, Avatar, Typography } from \"@material-ui/core\";\nimport {  useHistory\n} from \"react-router-dom\";\nconst genderItems = [\n    { id: \"male\", title: \"Male\" },\n    { id: \"female\", title: \"Female\" },\n    { id: \"other\", title: \"Other\" },\n];\n\nexport const initialFValues = {\n    fullName: \"\",\n    email: \"\",\n    mobile: \"\",\n    gender: \"male\",\n    who: \"\",\n    // dob: new Date(),\n    terms: false,\n    password: \"\",\n    confPass: \"\",\n};\n\nfunction SignUpForm({ setUser }) {\n  const history =useHistory();\n    const validate = (fieldValues = values) => {\n        // console.log(values);\n        let temp = { ...errors };\n\n        if (\"fullName\" in fieldValues)\n            temp.fullName = fieldValues.fullName\n                ? \"\"\n                : \"This field is required.\";\n        if (\"email\" in fieldValues)\n            temp.email = /$^|.+@.+..+/.test(fieldValues.email)\n                ? \"\"\n                : \"Email is not valid.\";\n        if (\"mobile\" in fieldValues)\n            temp.mobile =\n                fieldValues.mobile.length > 9\n                    ? \"\"\n                    : \"Minimum 10 numbers required.\";\n        if (\"who\" in fieldValues)\n            temp.who =\n                fieldValues.who.length !== 0 ? \"\" : \"This field is required.\";\n        if (\"password\" in fieldValues)\n            temp.password = fieldValues.password\n                ? \"\"\n                : \"This field is required.\";\n        if (\"confPass\" in fieldValues)\n            temp.confPass =\n                values.password === fieldValues.confPass\n                    ? \"\"\n                    : \"Passwords do not match.\";\n        setErrors({\n            ...temp,\n        });\n\n        if (fieldValues === values)\n            return Object.values(temp).every((message) => message === \"\");\n    };\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm,\n    } = useForm(initialFValues, true, validate);\n\n    // const { write } = Userdata(initialFValues);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (validate()) {\n            // console.log(values);\n            // write(values);\n            setUser({ email: values.email, password: values.password });\n            resetForm();\n            history.push(\"/signin\");\n\n        }\n    };\n\n    const paperStyle = {\n        padding: \"30px 10px\",\n        width: \"400px\",\n        margin: \"0 auto\",\n    };\n\n    const avatarStyle = {\n        backgroundColor: \"#1bbd7e\",\n    };\n\n    const headerStyle = {\n        margin: \"0\",\n    };\n\n    const profession = () => [\n        { id: \"1\", title: \"Student\" },\n        { id: \"2\", title: \"Teacher\" },\n        { id: \"3\", title: \"Professional\" },\n    ];\n\n    return (\n        <div>\n            <Form onSubmit={handleSubmit}>\n                <Grid>\n                    <Paper style={paperStyle}>\n                        <Grid align=\"center\">\n                            <Avatar style={avatarStyle}>\n                                <AddCircleOutlineOutlinedIcon />\n                            </Avatar>\n                            <h2 style={headerStyle}>Sign Up</h2>\n                            <Typography variant=\"caption\">\n                                Please fill the form to sign up\n                            </Typography>\n                        </Grid>\n                        <Grid align=\"center\">\n                            <Controls.Input\n                                name=\"fullName\"\n                                label=\"Full Name\"\n                                value={values.fullName}\n                                onChange={handleInputChange}\n                                error={errors.fullName}\n                            />\n                            <Controls.Input\n                                label=\"Email\"\n                                name=\"email\"\n                                value={values.email}\n                                onChange={handleInputChange}\n                                error={errors.email}\n                            />\n                            <Controls.Input\n                                label=\"Mobile\"\n                                name=\"mobile\"\n                                value={values.mobile}\n                                onChange={handleInputChange}\n                                error={errors.mobile}\n                            />\n                            <Controls.RadioGroup\n                                name=\"gender\"\n                                label=\"Gender\"\n                                value={values.gender}\n                                onChange={handleInputChange}\n                                items={genderItems}\n                            />\n                            <Controls.Select\n                                name=\"who\"\n                                label=\"Are you a\"\n                                value={values.who}\n                                onChange={handleInputChange}\n                                options={profession()}\n                                error={errors.who}\n                            />\n                            {/* <Controls.DatePicker\n              name=\"dob\"\n              label=\"Date of Birth\"\n              value={values.dob}\n              onChange={handleInputChange}\n            /> */}\n                            <Controls.Input\n                                name=\"password\"\n                                type=\"password\"\n                                label=\"Password\"\n                                value={values.password}\n                                onChange={handleInputChange}\n                                error={errors.password}\n                            />\n                            {/* {values.password} */}\n                            <Controls.Input\n                                name=\"confPass\"\n                                type=\"password\"\n                                label=\"Confirm Password\"\n                                value={values.confPass}\n                                onChange={handleInputChange}\n                                error={errors.confPass}\n                            />\n                            {/* {values.confPass} */}\n\n                            <Controls.Checkbox\n                                name=\"terms\"\n                                label=\"I have read Terms and conditions\"\n                                value={values.terms}\n                                onChange={handleInputChange}\n                            />\n                            <Controls.Button type=\"submit\" text=\"Submit\" />\n                        </Grid>\n                    </Paper>\n                </Grid>\n            </Form>\n        </div>\n    );\n}\n\nexport default SignUpForm;\n","import React, { useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Button,\r\n    Typography,\r\n    CardMedia,\r\n    CardActionArea,\r\n    IconButton,\r\n} from \"@material-ui/core\";\r\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\r\nimport PlaylistAddOutlinedIcon from \"@material-ui/icons/PlaylistAddOutlined\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\n\r\nfunction MyCard({ id, img, title, cart, setCart, wish, setWish }) {\r\n    return (\r\n        <Card key={id} item md={3}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt={title}\r\n                    height=\"140\"\r\n                    image={img}\r\n                    title={title}\r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {title}\r\n                    </Typography>\r\n                    {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.description}\r\n          </Typography> */}\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"add to wishlist\"\r\n                    onClick={() => {\r\n                        console.log(title, \"added to wishlist\");\r\n                        setWish([...wish, title]);\r\n                    }}\r\n                >\r\n                    <PlaylistAddOutlinedIcon />\r\n                </IconButton>\r\n\r\n                <IconButton aria-label=\"share\" color=\"green\">\r\n                    <ShareIcon />\r\n                </IconButton>\r\n                {/* <Button size=\"small\" color=\"secondary\">\r\n          Add to wishlist\r\n        </Button> */}\r\n                <IconButton\r\n                    color=\"primary\"\r\n                    aria-label=\"add to shopping cart\"\r\n                    onClick={() => {\r\n                        console.log(title, \"added to cart\");\r\n                        setCart([...cart, title]);\r\n                    }}\r\n                >\r\n                    <AddShoppingCartIcon />\r\n                </IconButton>\r\n                {/* <Button size=\"small\" color=\"primary\" onClick={()=>console.log(props.title)}>\r\n          Add to cart\r\n        </Button> */}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MyCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MyCard from \"./Card\";\r\nimport { Grid } from \"@material-ui/core/\";\r\n\r\nfunction Main({ cart, setCart, wish, setWish }) {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n\r\n    const random = Math.floor(Math.random() * 4500);\r\n    useEffect(() => {\r\n        fetch(\"https://jsonplaceholder.typicode.com/photos\")\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setItems(result.slice(random, random + 20));\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            );\r\n    }, []);\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <Grid\r\n                item\r\n                container\r\n                spacing={2}\r\n                // style={{padding:20}}\r\n            >\r\n                {items.map((item) => (\r\n                    <Grid item>\r\n                        <MyCard\r\n                            id={item.id}\r\n                            img={item.thumbnailUrl}\r\n                            title={\r\n                                item.title.charAt(0).toUpperCase() + // works too -> item.title[0].toUpperCase()\r\n                                item.title.slice(1, item.title.search(\" \"))\r\n                            }\r\n                            cart={cart}\r\n                            setCart={setCart}\r\n                            wish={wish}\r\n                            setWish={setWish}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={toggleDrawer(\"cart\", true)}>{\"cart\"}</Button>\r\n      <Drawer\r\n        anchor={\"cart\"}\r\n        open={state[\"cart\"]}\r\n        onClose={toggleDrawer(\"cart\", false)}\r\n      >\r\n        {list(\"cart\")}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport {\n    Grid,\n    InputBase,\n    IconButton,\n    Badge,\n    makeStyles,\n    Typography,\n    Drawer,\n    List,\n    Divider,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Tooltip,\n} from \"@material-ui/core\";\n\nimport clsx from \"clsx\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport FormatListNumberedOutlinedIcon from \"@material-ui/icons/FormatListNumberedOutlined\";\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport TemporaryDrawer from \"./Cart-Items\";\n\nconst useStyles = makeStyles((theme) => ({\n    list: {\n        width: 250,\n    },\n    root: {\n        backgroundColor: \"#000\",\n    },\n    searchInput: {\n        opacity: \"0.6\",\n        padding: `0px ${theme.spacing(1)}px`,\n        fontSize: \"0.8rem\",\n        backgroundColor: \"#a7f7ff\",\n        \"&:hover\": {\n            backgroundColor: \"#fff\",\n        },\n        \"& .MuiSvgIcon-root\": {\n            marginRight: theme.spacing(1),\n        },\n    },\n}));\n\nexport default function Header({ cart, setCart, wish, setWish }) {\n    const classes = useStyles();\n\n    const [state, setState] = React.useState({\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (\n            event.type === \"keydown\" &&\n            (event.key === \"Tab\" || event.key === \"Shift\")\n        ) {\n            return;\n        }\n        setState({ [anchor]: open });\n    };\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list)}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                <div>\n                    <Typography variant=\"h5\" align=\"center\">\n                        Cart items\n                    </Typography>\n                    <Typography\n                        variant=\"caption\"\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\n                    >\n                        press Esc to close cart\n                    </Typography>\n                    {/* <IconButton onClick={()=> setState({right: false})}><CloseIcon /></IconButton> */}\n                </div>\n                <Divider />\n                {cart.map((text) => (\n                    <ListItem button key={text}>\n                        <ListItemText primary={text} />\n                        <ListItemIcon>\n                            <DeleteIcon\n                                onClick={() =>\n                                    setCart(\n                                        cart.filter((item) => item !== text)\n                                    )\n                                }\n                            />\n                        </ListItemIcon>\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <Grid container alignItems=\"center\">\n            <Grid item>\n                <InputBase\n                    placeholder=\"Search Products\"\n                    className={classes.searchInput}\n                    startAdornment={<SearchIcon fontSize=\"medium\" />}\n                />\n            </Grid>\n            <Grid item sm></Grid>\n            <Grid item>\n                <Tooltip title=\"Wishlist\">\n                    <IconButton>\n                        <Badge badgeContent={wish.length} color=\"primary\">\n                            <FormatListNumberedOutlinedIcon\n                                style={{ color: \"#fff\" }}\n                                fontSize=\"medium\"\n                            />\n                        </Badge>\n                    </IconButton>\n                </Tooltip>\n\n                <IconButton onClick={toggleDrawer(\"right\", true)}>\n                    <Badge badgeContent={cart.length} color=\"secondary\">\n                        <Tooltip title=\"Cart\">\n                            <ShoppingCartOutlinedIcon\n                                style={{ color: \"#fff\" }}\n                                fontSize=\"medium\"\n                            />\n                        </Tooltip>\n                        <Drawer\n                            anchor=\"right\"\n                            open={state[\"right\"]}\n                            onClose={toggleDrawer(\"right\", false)}\n                        >\n                            {list(\"right\")}\n                        </Drawer>\n                    </Badge>\n                </IconButton>\n\n                <Tooltip title=\"Logout\">\n                    <IconButton>\n                        <PowerSettingsNewIcon\n                            style={{ color: \"#fff\" }}\n                            fontSize=\"medium\"\n                        />\n                    </IconButton>\n                </Tooltip>\n            </Grid>\n        </Grid>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nimport LocalOfferOutlinedIcon from \"@material-ui/icons/LocalOfferOutlined\";\r\nimport StorefrontOutlinedIcon from \"@material-ui/icons/StorefrontOutlined\";\r\nimport ViewQuiltOutlinedIcon from \"@material-ui/icons/ViewQuiltOutlined\";\r\nimport SwapHorizOutlinedIcon from \"@material-ui/icons/SwapHorizOutlined\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport SettingsOutlinedIcon from \"@material-ui/icons/SettingsOutlined\";\r\n\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Grid,\r\n    InputBase,\r\n    IconButton,\r\n    Badge,\r\n    makeStyles,\r\n    useTheme,\r\n    ListItemText,\r\n    ListItemIcon,\r\n    Drawer,\r\n    List,\r\n    CssBaseline,\r\n    Typography,\r\n    Divider,\r\n    ListItem,\r\n    Tooltip,\r\n} from \"@material-ui/core\";\r\n\r\nimport Main from \"./main\";\r\nimport Header from \"./Header\";\r\nimport TemporaryDrawer from \"./Cart-Items\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: \"hidden\",\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        // display: \"flex\",\r\n        // alignItems: \"center\",\r\n        // justifyContent: \"flex-end\",\r\n        // padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function SideDrawer() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [cart, setCart] = useState([]);\r\n    const [wish, setWish] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(wish);\r\n    }, [wish]);\r\n\r\n    useEffect(() => {\r\n        console.log(cart);\r\n    }, [cart]);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Header\r\n                        cart={cart}\r\n                        setCart={setCart}\r\n                        wish={wish}\r\n                        setWish={setWish}\r\n                    />\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === \"rtl\" ? (\r\n                            <ChevronRightIcon />\r\n                        ) : (\r\n                            <ChevronLeftIcon />\r\n                        )}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key={\"Offers\"}>\r\n                        <ListItemIcon>\r\n                            <LocalOfferOutlinedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Offers\"} />\r\n                    </ListItem>\r\n                    <ListItem button key={\"Deals\"}>\r\n                        <ListItemIcon>\r\n                            <StorefrontOutlinedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Deals\"} />\r\n                    </ListItem>\r\n                    <ListItem button key={\"Orders\"}>\r\n                        <ListItemIcon>\r\n                            <ViewQuiltOutlinedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Orders\"} />\r\n                    </ListItem>\r\n                    <ListItem button key={\"Transections\"}>\r\n                        <ListItemIcon>\r\n                            <SwapHorizOutlinedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Transections\"} />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    {[\"Account\", \"Setting\"].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? (\r\n                                    <AccountCircleOutlinedIcon />\r\n                                ) : (\r\n                                    <SettingsOutlinedIcon />\r\n                                )}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <Main\r\n                    cart={cart}\r\n                    setCart={setCart}\r\n                    wish={wish}\r\n                    setWish={setWish}\r\n                />\r\n            </main>\r\n            {/* <TemporaryDrawer /> */}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Controls from \"../components/controls/Controls\";\r\nimport { useForm, Form } from \"../components/useForm\";\r\nimport { Grid, Paper, Avatar, Typography } from \"@material-ui/core\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    useHistory,\r\n} from \"react-router-dom\";\r\n\r\n// import { Userdata } from \"../userdata\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Shop from \"../shopComponents/Shop\";\r\n\r\nconst initialFValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n    remember: false,\r\n};\r\n\r\nexport default function SignInForm() {\r\n    const users = useSelector((store) => store.users);\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors };\r\n        if (\"password\" in fieldValues)\r\n            temp.password = fieldValues.password\r\n                ? \"\"\r\n                : \"This field is required.\";\r\n        if (\"email\" in fieldValues)\r\n            temp.email = /$^|.+@.+..+/.test(fieldValues.email)\r\n                ? \"\"\r\n                : \"Email is not valid.\";\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm,\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const history = useHistory();\r\n    // const { read } = Userdata(initialFValues);\r\n    // console.log(React.version);\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (validate()) {\r\n            console.log(users);\r\n            for (const item of users) {\r\n                if (\r\n                    item.email === values.email &&\r\n                    item.password === values.password\r\n                ) {\r\n                    history.push(\"/shop\");\r\n                    // window.alert(\"allowed\");\r\n                    // ReactDOM.render(<Shop />, document.getElementById(\"forShop\"));\r\n                } else {\r\n                    console.log(\"wrong credentials\");\r\n                    <Redirect to=\"/signin\" />;\r\n                }\r\n                resetForm();\r\n            }\r\n        }\r\n    };\r\n\r\n    const paperStyle = {\r\n        padding: \"30px 10px\",\r\n        width: \"400px\",\r\n        margin: \"0 auto\",\r\n        align: \"center\",\r\n    };\r\n\r\n    const avatarStyle = {\r\n        backgroundColor: \"#1bbd7e\",\r\n    };\r\n\r\n    const headerStyle = {\r\n        margin: \"0\",\r\n    };\r\n\r\n    return (\r\n        <div id=\"ac\" style={{ marginTop: \"25vh\" }}>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Grid>\r\n                    <Paper style={paperStyle}>\r\n                        <Grid align=\"center\">\r\n                            <Avatar style={avatarStyle}>\r\n                                <LockOutlinedIcon />\r\n                            </Avatar>\r\n                            <h2 style={headerStyle}>Sign In</h2>\r\n                            <Typography variant=\"caption\">\r\n                                Enter Email and password to login\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid align=\"center\">\r\n                            <Controls.Input\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleInputChange}\r\n                                error={errors.email}\r\n                            />\r\n                            <Controls.Input\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                value={values.password}\r\n                                onChange={handleInputChange}\r\n                                error={errors.password}\r\n                                type=\"password\"\r\n                            />\r\n                            <Controls.Checkbox\r\n                                name=\"remember\"\r\n                                label=\"Remember Me\"\r\n                                value={values.remember}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                            <Controls.Button type=\"submit\" text=\"Sign In\" />\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    Grid,\n    Paper,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Typography,\n} from \"@material-ui/core\";\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\nconst linkStylle = {\n    textDecoration: \"none\",\n    color: \"blue\",\n};\nconst listItems = [\n    <span>\n        Defaults:\n        <ul>\n            <li>\n                Email: <code>keshav@demo.com</code>\n            </li>\n            <li>\n                Password: <code>dev</code>\n            </li>\n        </ul>\n        you can\n        <Link to=\"/signin\" style={linkStylle}>\n            {\" \"}\n            Sign In{\" \"}\n        </Link>\n        using the above credentials.\n    </span>,\n    <span>\n        you can\n        <Link to=\"/signup\" style={linkStylle}>\n            {\" \"}\n            Sign Up{\" \"}\n        </Link>\n        and create an account.\n    </span>,\n    <span>\n        What works:\n        <ul>\n            <li>Opening / closing of sidebar</li>\n            <li>adding / removing items from cart</li>\n            <li>Sign in and Sign up page</li>\n        </ul>\n    </span>,\n    <span>\n        you can directly go to my\n        <Link to=\"/shop\" style={linkStylle}>\n            &nbsp;E-commerce website\n        </Link>\n    </span>,\n];\nconst paperStyle = {\n    padding: \"30px 10px\",\n    width: \"400px\",\n    margin: \"0 auto\",\n    backgroundColor: \"#ffffbe\",\n};\nconst Instructions = () => (\n    <Grid style={{ marginTop: \"15vh\" }}>\n        <Paper style={paperStyle}>\n            <Typography variant=\"h5\" align=\"center\">\n                Instructions\n            </Typography>\n            {listItems.map((item) => (\n                <List>\n                    <ListItem>\n                        <ListItemIcon>\n                            <DoubleArrowIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={item} />\n                    </ListItem>\n                </List>\n            ))}\n        </Paper>\n    </Grid>\n);\n\nexport default Instructions;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport SignUpForm from \"../pages/SignUp\";\nimport SignInForm from \"../pages/SignIn\";\nimport Instructions from \"../pages/Instructions\";\nimport Container from \"../pages/Container\"; //important\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Shop from \"../shopComponents/Shop\";\n\nfunction App() {\n    //redux action\n    const addUser = (user) => ({\n        type: \"UPDATE_USERS\",\n        payload: user,\n    });\n\n    const users = useSelector((state) => state.users);\n\n    const dispatch = useDispatch();\n\n    const [user, setUser] = useState({\n        email: \"keshav@demo.com\",\n        password: \"dev\",\n    });\n\n    useEffect(() => {\n        dispatch(addUser(user));\n    }, [user]);\n\n    useEffect(() => {\n        console.log(users);\n    }, [users]);\n\n    return (\n        <div>\n            {/* <Container /> */}\n            {/* <Example/> */}\n            {/* <SignInForm users={users} /> */}\n            {/* <UserList /> */}\n            {/* <SignInForm /> */}\n            <Router>\n                <Switch>\n                    <Route exact path=\"/Shopping\" render={() => <Instructions />} />\n                    <Route\n                        exact\n                        path=\"/signup\"\n                        render={() => <SignUpForm setUser={setUser} />}\n                    />\n                    <Route\n                        exact\n                        path=\"/signin\"\n                        component={() => <SignInForm />}\n                    />\n                    {/* <Route exact path=\"/signin\" render={() => <SignInForm users={users}  />} /> */}\n                    <Route exact path=\"/shop\" render={() => <Shop />} />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst initialState = {\n  users: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_USERS\":\n      return {\n        ...state,\n        users: state.users.concat(action.payload),\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}